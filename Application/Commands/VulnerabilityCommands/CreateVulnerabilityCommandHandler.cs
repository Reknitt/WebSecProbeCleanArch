using MediatR;
using Presentation.Domain.Entities.VulnerabilityEntities;
using Presentation.Domain.Interfaces;

namespace WebSecProbeCleanArch.Application.Commands.VulnerabilityCommands
{
    public class CreateVulnerabilityCommandHandler(IVulnerabilityRepository vulnerabilityRepository) : IRequestHandler<CreateVulnerabilityCommand, int>
    {
        public async Task<int> Handle(CreateVulnerabilityCommand request, CancellationToken cancellationToken)
        {
            var vulnerability = new Vulnerability
            {
                Category = request.Category,
                Title = request.Title,
                Overview = request.Overview,
                Description = request.Description,
                HowToPrevent = request.HowToPrevent,
                Attacks = request.Attacks,
                References = request.References,
                ListOfMappedCWEs = request.ListOfMappedCWEs,
                Practice = request.Practice
            };

            return await vulnerabilityRepository.CreateAsync(vulnerability);
        }
    }
}
